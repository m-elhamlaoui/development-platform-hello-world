def DIRECTORIES = [
    'GateawayService','ConfigService','DiscoveryService',
    'HealthMonitoringService','FetchingData','EndOfLifeService','CollisionService','UserService'
]
def SERVICES = [
    'gateway-service', 'config-service', 'discovery-service',
    'health-monitoring-service', 'fetching-data-service', 'end-of-life-service',
    'collision-service','user-service'
]

pipeline {
    agent any

    environment {
        LOCAL_REGISTRY = 'localhost:32000'  // MicroK8s default
        JAVA17 = '/usr/lib/jvm/java-17-openjdk-amd64'
        JAVA21 = '/usr/lib/jvm/java-21-openjdk-amd64'
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build JARs') {
                    steps {
                        script {
                            for (int i = 0; i < SERVICES.size(); i++) {
                                def dirName = DIRECTORIES[i]
                                echo "Building JAR in directory ${dirName}..."
                                dir("SpaceApp/SpringBackend/${dirName}") {
                                    echo "DEBUG : Listing files in ${dirName}"
                                    sh 'ls -l'
                                    // 👉 Sélectionne JAVA_HOME selon le dossier
                                    if (dirName == 'FetchingData') {
                                        sh 'export JAVA_HOME=${JAVA21} && export PATH=$JAVA_HOME/bin:$PATH && mvn clean package -DskipTests'
                                    } else {
                                        sh 'export JAVA_HOME=${JAVA17} && export PATH=$JAVA_HOME/bin:$PATH && mvn clean package -DskipTests'
                                    }
                                }
                            }
                        }
                    }
                }


        stage('Build Images with Buildah') {
            steps {
                script {
                    for (int i = 0; i < SERVICES.size(); i++) {
                        def svc = SERVICES[i]
                        def dirName = DIRECTORIES[i]
                        def image = "${env.LOCAL_REGISTRY}/${svc}:latest"
                        echo "Building OCI image for ${svc} from directory ${dirName}..."
                        dir("SpaceApp/SpringBackend/${dirName}") {
                            echo "DEBUG : Listing files in ${dirName}"
                            sh 'ls -l target/'
                            // Build OCI image using buildah
                            sh "buildah bud -t ${image} ."
                        }
                    }
                }
            }
        }

        stage('Deploy to MicroK8s') {
            steps {
               echo 'verifying files'
               sh 'ls -l SpaceApp/SpringBackend/'
                echo "Deploying Spring Boot apps to MicroK8s..."
                sh "microk8s kubectl apply -f SpaceApp/SpringBackend/Deployment.yml"
                sh "microk8s kubectl apply -f SpaceApp/SpringBackend/Service.yml"
            }
        }
    }

    post {
        success {
            echo '✅ Spring Boot app deployed successfully to MicroK8s.'
        }
        failure {
            echo '❌ Deployment failed.'
        }
    }
}
