// File: spring-app/Jenkinsfile

def DIRECTORIES = [
    'GateawayService','ConfigService','DiscoveryService',
    'HealthMonitoringService','FetchingData','EndOfLifeService','CollisionService','UserService'
]
def SERVICES = [
    'gateway-service', 'config-service', 'discovery-service',
    'health-monitoring-service', 'fetching-data-service', 'end-of-life-service',
    'collision-service','user-service'
]
pipeline {
    agent any

    environment {
        LOCAL_REGISTRY = 'localhost:32000'

    }

    stages {

        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build JARs') {
            steps {
                script {
                    for (int i = 0; i < SERVICES.size(); i++) {
                        def svc = SERVICES[i]
                        def dirName = DIRECTORIES[i]
                        echo "Building ${svc}.jar in directory ${dirName}..."
                        dir(dirName) {
                            bat './mvnw clean package -DskipTests'
                        }
                    }
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    for (int i = 0; i < SERVICES.size(); i++) {
                        def svc = SERVICES[i]
                        def dirName = DIRECTORIES[i]
                        def image = "${LOCAL_REGISTRY}/${svc}:latest"
                        echo "Building Docker image for ${svc} from directory ${dirName}..."
                        dir(dirName) {
                            bat "docker build -t ${image} ."
                        }
                    }
                }
            }
        }


        stage('Push to MicroK8s Registry') {
            steps {
                script {
                    for (svc in SERVICES) {
                        def image = "${LOCAL_REGISTRY}/${svc}:latest"
                        echo "Pushing Docker image for ${svc}..."
                        bat "docker push ${image}"
                    }
                }
            }
        }

        stage('Deploy All Microservices') {
            steps {
                echo "Deploying Spring Boot app (all services)..."
                bat "wsl microk8s kubectl apply -f /mnt/d/ProjetHamaloui/development-platform-hello-world/SpaceApp/SpringBackend/k8s/spring-app-deployment.yaml"
                bat "wsl microk8s kubectl apply -f /mnt/d/ProjetHamaloui/development-platform-hello-world/SpaceApp/SpringBackend/k8s/spring-app-service.yaml"

            }
        }
    }

    post {
        success {
            echo '✅ Spring Boot app deployed successfully.'
        }
        failure {
            echo '❌ Deployment failed.'
        }
    }
}
