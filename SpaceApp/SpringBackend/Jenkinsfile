def DIRECTORIES = [
    'GateawayService','ConfigService','DiscoveryService',
    'HealthMonitoringService','FetchingData','EndOfLifeService','CollisionService','UserService'
]
def SERVICES = [
    'gateway-service', 'config-service', 'discovery-service',
    'health-monitoring-service', 'fetching-data-service', 'end-of-life-service',
    'collision-service','user-service'
]

pipeline {
    agent any

    environment {
        DOCKERHUB_USER = 'youssefbouraoui1'
        JAVA17 = '/usr/lib/jvm/java-17-openjdk-amd64'
        JAVA21 = '/usr/lib/jvm/java-21-openjdk-amd64'
        KUBECONFIG = '/var/snap/microk8s/current/credentials/client.config' // ✅ MicroK8s config
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build JARs') {
            steps {
                script {
                    for (int i = 0; i < SERVICES.size(); i++) {
                        def dirName = DIRECTORIES[i]
                        def javaHome = (dirName == 'FetchingData') ? env.JAVA21 : env.JAVA17
                        dir("SpaceApp/SpringBackend/${dirName}") {
                            sh """
                                export JAVA_HOME=${javaHome}
                                export PATH=\$JAVA_HOME/bin:\$PATH
                                mvn clean package -DskipTests
                            """
                        }
                    }
                }
            }
        }

        stage('Build & Push Docker Images') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_TOKEN')]) {
                    sh "echo \$DOCKERHUB_TOKEN | docker login -u \$DOCKERHUB_USER --password-stdin"
                    script {
                        def tag = "build-${env.BUILD_NUMBER}"
                        for (int i = 0; i < SERVICES.size(); i++) {
                            def svc = SERVICES[i]
                            def dirName = DIRECTORIES[i]
                            def image = "${env.DOCKERHUB_USER}/${svc}:${tag}"
                            dir("SpaceApp/SpringBackend/${dirName}") {
                                sh "docker build -t ${image} ."
                                sh "docker push ${image}"
                            }
                        }
                    }
                    sh "docker logout"
                }
            }
        }

        stage('Deploy to MicroK8s') {
            steps {
                script {
                    def tag = "build-${env.BUILD_NUMBER}"
                    for (int i = 0; i < SERVICES.size(); i++) {
                        def svc = SERVICES[i]
                        def image = "${env.DOCKERHUB_USER}/${svc}:${tag}"

                        /* if (i == 0) {
                            sh "microk8s kubectl apply -f SpaceApp/SpringBackend/Deployment.yml"
                            sh "microk8s kubectl apply -f SpaceApp/SpringBackend/Services.yml"
                        } */

                        sh "microk8s kubectl set image deployment/${svc} ${svc}=${image} || true"
                    }
                }
            }
        }
    }

    post {
        success {
            echo '✅ Spring Boot app deployed successfully to MicroK8s!'
        }
        failure {
            echo '❌ Deployment failed. Check Jenkins logs.'
        }
    }
}
