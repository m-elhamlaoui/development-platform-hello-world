pipeline {
  agent any

  environment {
    IMAGE_NAME = 'youssefbouraoui1/django-service'
    DOCKERHUB_USER = 'youssefbouraoui1'
    // Define services list if you want to deploy multiple services
    SERVICES = 'django-service'  // space separated if more than one
  }

  stages {
    stage('Build & Push Images') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_TOKEN')]) {
          script {
            def tag = "build-${env.BUILD_NUMBER}"
            sh "echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USER --password-stdin"
            dir('SpaceApp/SatelliteTracker') {
              def image = "${DOCKERHUB_USER}/django-service:${tag}"
              echo "üî® Building backend Docker image: ${image}"
              sh "docker build -t ${image} ."
              sh "docker push ${image}"
            }
            sh "docker logout"
          }
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        script {
          def tag = "build-${env.BUILD_NUMBER}"
          def servicesList = SERVICES.split()  // split by space if multiple
          sh "/snap/bin/kubectl apply -f SpaceApp/SatelliteTracker/deployTomicrok8s.yml"
          sh "/snap/bin/kubectl apply -f SpaceApp/SatelliteTracker/exposeService.yml"

          for (svc in servicesList) {
            def image = "${DOCKERHUB_USER}/${svc}:${tag}"
            echo "üîÑ Updating deployment ${svc} with image ${image}"
            sh "/snap/bin/kubectl set image deployment/${svc} ${svc}=${image} || true"
          }
        }
      }
    }
  }

  post {
    success {
      echo '‚úÖ Backend image built and deployed successfully!'
    }
    failure {
      echo '‚ùå Backend image build or deploy failed!'
    }
  }
}
